

1. llm은 백엔드에 접근하지 못하는데 db의 피처에 어떻게 접근할 것인가?

= 사용자의 프롬프트를 기반으로 사용빈도가 높은 단어를 키워드로 제시하여 피처를 필터링한다. 
  ex) 순한, 얌전한, 활발한...


2. 사용자의 api키와 db주소는 어떻게 하는가?

= env를 사용하여 숨겨둔다


3. 사용자가 악의적으로 db에 강력한 명령문을 내릴 경우에는?

= 프롬프트에서 1차적으로 막고 백엔드에서 select외에는 방지/ 사용자에 권한 제한하여 방지


4. llm이 응답을 json 코드블록으로 감싸거나 줄바꿈/ 제어문자가 포함되어 json.load()에서 파싱 오류 발생

= 정규 표현식과 문자열 치환으로 코드블록 및 제어문자를 제거한 뒤 파싱하도록 코드 수정.




???

컴포넌트
랜더링
